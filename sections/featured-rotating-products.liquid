<div id="product-slider">
    <div class="slider-container">
        {% for product in collections.all.products %}
        <div class="product-item" data-index="{{ forloop.index0 }}">
            <img src="{{ product.featured_image | img_url: 'medium' }}" alt="{{ product.title }}">
            <p>{{ product.title }}</p>
            <p>{{ product.price | money }}</p>
            <a href="{{ product.url }}" class="btn btn-primary">Купити</a>
        </div>
        {% endfor %}
    </div>
</div>

<style>
  #product-slider {
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    max-width: 900px;
    margin: auto;
  }
  .slider-container {
    display: flex;
    align-items: center;
    gap: 10px;
  }
  .product-item {
    flex: 1;
    text-align: center;
    padding: 15px;
    border-radius: 10px;
    transition: transform 0.3s, opacity 0.3s;
    cursor: pointer;
    background: #f9f9f9;
    border: 1px solid #ddd;
  }
  .product-item img {
    max-width: 100%;
    border-radius: 10px;
  }
  .product-item p { margin: 5px 0; }
  .btn { display: none; padding: 8px 15px; background: #007bff; color: #fff; text-decoration: none; border-radius: 5px; }
  
  .product-item.inactive {
    transform: scale(0.8);
    opacity: 0.5;
  }
  .product-item.active {
    flex: 2;
    transform: scale(1);
    opacity: 1;
  }
  .product-item.active .btn { display: inline-block; }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function() {
      const items = document.querySelectorAll(".product-item");
      let currentIndex = 0;
      
      function updateView() {
          items.forEach((item, i) => {
              item.classList.toggle("active", i === currentIndex);
              item.classList.toggle("inactive", i !== currentIndex);
          });
      }
      
      items.forEach((item, index) => {
          item.addEventListener("click", () => {
              currentIndex = index;
              updateView();
          });
      });
      
      updateView();
  });
</script>
